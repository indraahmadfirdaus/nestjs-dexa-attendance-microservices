version: '3.8'

services:
  postgres-main:
    image: postgres:15-alpine
    container_name: attendance-postgres-main
    environment:
      POSTGRES_DB: attendance_main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5434:5432"
    volumes:
      - postgres_main_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - attendance-network

  postgres-events:
    image: postgres:15-alpine
    container_name: attendance-postgres-events
    environment:
      POSTGRES_DB: attendance_events
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5433:5432"
    volumes:
      - postgres_events_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - attendance-network

  redis:
    image: redis:7-alpine
    container_name: attendance-redis
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - attendance-network

  minio:
    image: minio/minio:latest
    container_name: attendance-minio
    ports:
      - "9000:9000"      # API Port
      - "9001:9001"      # Console Port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - attendance-network

volumes:
  postgres_main_data:
  postgres_events_data:
  redis_data:
  minio_data:

networks:
  attendance-network:
    driver: bridge