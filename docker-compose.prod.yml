version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_EMAIL:-admin@${DOMAIN}}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - attendance-network

  postgres-main:
    image: postgres:15-alpine
    container_name: attendance-postgres-main
    restart: always
    environment:
      POSTGRES_DB: attendance_main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_main_data:/var/lib/postgresql/data
    networks:
      - attendance-network

  postgres-events:
    image: postgres:15-alpine
    container_name: attendance-postgres-events
    restart: always
    environment:
      POSTGRES_DB: attendance_events
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_events_data:/var/lib/postgresql/data
    networks:
      - attendance-network

  redis:
    image: redis:7-alpine
    container_name: attendance-redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - attendance-network

  minio:
    image: minio/minio:latest
    container_name: attendance-minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - attendance-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-api.rule=Host(`${DOMAIN}`) && PathPrefix(`/files`)"
      - "traefik.http.routers.minio-api.entrypoints=websecure"
      - "traefik.http.routers.minio-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.minio-api.service=minio-api"
      - "traefik.http.services.minio-api.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.minio-stripprefix.stripprefix.prefixes=/files"
      - "traefik.http.routers.minio-api.middlewares=minio-stripprefix"

  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
    container_name: attendance-auth
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres-main:5432/attendance_main
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
    depends_on:
      - postgres-main
    networks:
      - attendance-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`${DOMAIN}`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=letsencrypt"
      - "traefik.http.services.auth.loadbalancer.server.port=3002"
      - "traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/api/auth"
      - "traefik.http.routers.auth.middlewares=auth-stripprefix"

  employee-service:
    build:
      context: .
      dockerfile: apps/employee-service/Dockerfile
    container_name: attendance-employee
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres-main:5432/attendance_main
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      MINIO_USE_SSL: "false"
      MINIO_PUBLIC_BASE_URL: https://${DOMAIN}
      MINIO_PUBLIC_PREFIX: /files
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      USE_GATEWAY: "true"
      GATEWAY_URL: https://${DOMAIN}
    depends_on:
      - postgres-main
      - redis
      - minio
    networks:
      - attendance-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.employee.rule=Host(`${DOMAIN}`) && (PathPrefix(`/api/employees`) || PathPrefix(`/api/profile`))"
      - "traefik.http.routers.employee.entrypoints=websecure"
      - "traefik.http.routers.employee.tls.certresolver=letsencrypt"
      - "traefik.http.services.employee.loadbalancer.server.port=3003"
      - "traefik.http.middlewares.employee-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.employee.middlewares=employee-stripprefix"

  attendance-service:
    build:
      context: .
      dockerfile: apps/attendance-service/Dockerfile
    container_name: attendance-attendance
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres-main:5432/attendance_main
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - postgres-main
      - redis
    networks:
      - attendance-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.attendance.rule=Host(`${DOMAIN}`) && PathPrefix(`/api/attendance`)"
      - "traefik.http.routers.attendance.entrypoints=websecure"
      - "traefik.http.routers.attendance.tls.certresolver=letsencrypt"
      - "traefik.http.services.attendance.loadbalancer.server.port=3004"
      - "traefik.http.middlewares.attendance-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.attendance.middlewares=attendance-stripprefix"

  event-service:
    build:
      context: .
      dockerfile: apps/event-service/Dockerfile
    container_name: attendance-event
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres-main:5432/attendance_main
      EVENTS_DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres-events:5432/attendance_events
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - postgres-main
      - postgres-events
      - redis
    networks:
      - attendance-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.event.rule=Host(`${DOMAIN}`) && (PathPrefix(`/api/audit-logs`) || PathPrefix(`/api/notifications`) || PathPrefix(`/api/events`))"
      - "traefik.http.routers.event.entrypoints=websecure"
      - "traefik.http.routers.event.tls.certresolver=letsencrypt"
      - "traefik.http.services.event.loadbalancer.server.port=3005"
      - "traefik.http.middlewares.event-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.event.middlewares=event-stripprefix"
      - "traefik.http.routers.event-ws.rule=Host(`${DOMAIN}`) && PathPrefix(`/notifications`)"
      - "traefik.http.routers.event-ws.entrypoints=websecure"
      - "traefik.http.routers.event-ws.tls.certresolver=letsencrypt"
      - "traefik.http.services.event-ws.loadbalancer.server.port=3005"

volumes:
  postgres_main_data:
  postgres_events_data:
  redis_data:
  minio_data:

networks:
  attendance-network:
    driver: bridge